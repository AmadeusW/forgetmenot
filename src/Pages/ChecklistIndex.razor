@page "/checklists/{Kind}"
@page "/checklists"

<PageTitle>Checklists</PageTitle>

@using forgetmenot.Data
@inject ChecklistService ChecklistService

<h1>Checklists</h1>

@if (checklists == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Summary</th>
                <th>Last modified</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var checklist in checklists)
            {
                string suffix = string.Empty;
                if (Kind == "archetypes")
                {
                    //suffix = " v." + checklist.Id.Version;
                }
                string uiParameters = string.Empty;
                string linkParameters = string.Empty;
                if (ChecklistService.Archetypes.Any(n => n.Id.Equals(checklist.Id)))
                {
                    uiParameters = "[archetype]";
                    linkParameters = "/archetype";
                }

                <tr>
                    <td>
                        @{
                            var link = $"checklist/{checklist.Id.TopicId}{linkParameters}";
                        }
                        <NavLink class="nav-link" href="@link">
                            @checklist.Title @suffix @uiParameters
                        </NavLink>
                    </td>
                    <td>@checklist.Summary</td>
                    <td>@checklist.ModifiedDate by @checklist.ModifiedBy</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public string? Kind {get; set;}

    private IList<Checklist> checklists;

    protected override async Task OnInitializedAsync()
    {
        checklists = (Kind ?? "") switch
        {
            "archetypes" => await ChecklistService.GetPrototypeChecklistsAsync(),
            "featured" => await ChecklistService.GetFeaturedChecklistsAsync(),
            _ => await ChecklistService.GetAllChecklistsAsync(),
        };
    }
}
